(in-package :megra)
;; handler method for grain event, incudine
(defmethod handle-grain-event-incu ((g grain-event) &key)
  (unless (gethash (event-sample-location g) *incu-buffer-directory*)
    (let* ((buffer (incudine:buffer-load (event-sample-location g)))
	   (bdata (make-buffer-data :buffer buffer
				    :buffer-rate (/ (incudine:buffer-sample-rate buffer)
						    (incudine:buffer-frames buffer))
				    :buffer-frames (incudine:buffer-frames buffer))))
      (setf (gethash (event-sample-location g) *incu-buffer-directory*) bdata)))
  (let ((bdata (gethash (event-sample-location g) *incu-buffer-directory*)))    
    (cond ((not (event-ambi-p g))
	   (scratch::megra-grain-rev (buffer-data-buffer bdata)
				     (buffer-data-buffer-rate bdata)
				     (buffer-data-buffer-frames bdata)
				     (event-level g)
				     (event-rate g)
				     (event-start g)
				     (event-lp-freq g)
				     (event-lp-q g)
				     (event-lp-dist g)
				     (event-pf-freq g)
				     (event-pf-q g)
				     (event-pf-gain g)
				     (event-hp-freq g)
				     (event-hp-q g)
				     (* (event-attack g) 0.001)
				     (* (- (event-duration g) (event-attack g)
					   (event-release g)) 0.001)
				     (* (event-release g) 0.001)
				     (event-position g)
				     (event-reverb g)
				     scratch::*rev-chapel*))
	  ((event-ambi-p g)  
	   (scratch::megra-grain-ambi-rev (buffer-data-buffer bdata)
					  (buffer-data-buffer-rate bdata)
					  (buffer-data-buffer-frames bdata)
					  (event-level g)
					  (event-rate g)
					  (event-start g)
					  (event-lp-freq g)
					  (event-lp-q g)
					  (event-lp-dist g)
					  (event-pf-freq g)
					  (event-pf-q g)
					  (event-pf-gain g)
					  (event-hp-freq g)
					  (event-hp-q g)
					  (* (event-attack g) 0.001)
					  (* (- (event-duration g)
						(event-attack g) (event-release g)) 0.001)
					  (* (event-release g) 0.001)
					  (* (event-azimuth g) 3.14159)
					  (* (event-elevation g) (* 3.14159 0.5))
					  (event-reverb g)
					  scratch::*rev-chapel*)))))

(defmethod handle-sine-event-incu ((evt sine-event) &key)
  (scratch::megra-sine-rev	    
   (if (typep (event-pitch evt) 'symbol)
       (cm::hertz (event-pitch evt))
       (event-pitch evt))
   (event-level evt)	    
   (event-lp-freq evt)
   (event-lp-q evt)
   (event-lp-dist evt)	    
   (* (event-attack evt) 0.001)
   (* (- (event-duration evt) (event-attack evt) (event-release evt)) 0.001)
   (* (event-release evt) 0.001)
   (event-position evt)
   (event-reverb evt)
   scratch::*rev-chapel*))

(defmethod handle-buzz-event-incu ((evt buzz-event) &key)
  (scratch::megra-buzz-rev
   (if (typep (event-pitch evt) 'symbol)
       (cm::hertz (event-pitch evt))
       (event-pitch evt))
   (event-level evt)
   (event-harmonies evt)	    
   (event-lp-freq evt)
   (event-lp-q evt)
   (event-lp-dist evt)	    
   (* (event-attack evt) 0.001)
   (* (- (event-duration evt) (event-attack evt) (event-release evt)) 0.001)
   (* (event-release evt) 0.001)
   (event-position evt)
   (event-reverb evt)
   scratch::*rev-chapel*))
